# Importin tensorflow libraryimport tensorflowfrom tensorflow import keras from keras.preprocessing.text import one_hotfrom tensorflow.keras.preprocessing.sequence import pad_sequencesfrom tensoflow.keras.models import load_model# Importing text-preprocessing librariesimport re import nltk from nltk.stem import WordNetLemmatizerfrom nltk.corpus import stopwords# importing Flask librariesfrom flask import Flask, render_template, redirect, requestnltk.download('stopwords')nltk.download('wordnet')nltk.download('omw-1.4')# Flask appapp = Flask(__name__,template_folder="template")# Loading the model model = load_model("lstm_model.h5")# Creating a lemmatizer objectlemmatizer = WordNetLemmatizer()# Defining a function for text-preprocessing def input_preprocess(input_text):        # Removing all the punctutaions and only alphabets to be remaining    text = re.sub('[^a-zA-Z]'," ",input_text)            # Re-arranging the text format    text = " ".join(sent.lower() for sent in text.split())             # Applying lemmatiazation and lowering    text = " ".join(lemmatizer.lemmatize(words) for words in text.split() if words not in stopwords.words("english"))        return text@app.route("/",methods=["GET"])def home_page():    return render_template("/index.html")@app.route("/",methods=["POST"])def sentiment_analysis():    if methods=="POST":        # HTML form to grab text            